*******************  Προγραμματισμός Συστήματος : 1η Εργασία  *******************

Βρουλιώτης Βασίλειος 
Α.Μ. : 1115201300025


*******************  Περιγραφή δομών  *******************

- Record.hpp : Το header που περιέχει τις πληροφορίες των εγγραφών.


- BinaryMaxHeap.hpp : Το header που περιέχει τις πληροφορίες για το
  σωρό. Ο σωρός (BinaryMaxHeap) αποτελείται από έναν μετρητή που 
  χρησιμεύει στην εισαγωγή και από ένα δείκτη σε BinaryMaxNode, ο 
  οποίος κόμβος αποθηκεύει τον αριθμό τηλεφώνου του καλούντος, το
  συνολικό ποσό που έχει ξοδέψει σε κλήσεις-μηνύματα κ.τ.λ. όπως 
  και τρεις δείκτες στην ίδια τη δομή που αντιστοιχούν σε κόμβους
  γονέα, αριστερού και δεξιού παιδιού.


- HashTable.hpp : Header που περιέχει τις πληροφορίες για τους 
  πίνακες κατακερματισμού.


- Region.hpp : Header που περιέχει τις πληροφορίες για τη δομή 
  που αποθηκεύει ένα τριψήφιο κλειδί σε μία λίστα, μαζί με τον
  αριθμό εμφανίσεων αυτού του κλειδιού. Χρησιμοποιείται για τη
  λειτουργία "topdest".


- SubList.hpp : Header που περιέχει τις πληροφορίες για τη δομή 
  που αποθηκεύει μια συμβολοσειρά κλειδί σε μία λίστα μαζί με 
  τον αριθμό εμφανίσεων αυτού του κλειδιού. Χρησιμοποιείται για 
  τη λειτουργία "indist".


- HashList.hpp : Header που περιέχει τις πληροφορίες για τη 
  δομή που αποθηκεύει τους κόμβους με τους κουβάδες (buckets).


- BucketNode.hpp : Η δομή που αποθηκεύει τον κάθε κουβά ξεχωριστά
  όπως επίσης και ένα δείκτη σε μία λίστα από εγγραφές. 


- ListNode.hpp : Η τελική δομή-λίστα που περιέχει τις εγγραφές
  που αντιστοιχούν στις πληροφορίες που αναφέρονται από τον 
  πίνακα κατακερματισμού στους κάδους. Έχει οριστεί με "define"
  το μέγεθος των κόμβων αυτών.


- RestRecord.hpp : Το header που περιέχει τις πληροφορίες των 
  "υπολοίπων" εγγραφών. Στη μεταβλητή num ανατίθεται είτε caller,
  είτε callee αναλόγως του ζητούμενου κάθε φορά.


- Headers.hpp : Όλες οι απαραίτητες βιλιοθήκες.


*******************  Περιγραφή προγραμμάτων (κυρίως)  *******************


- mainSample.cpp : Το πρόγραμμα που διαχειρίζεται όλη την εξέλιξη των
  λειτουργιών. Σύντομη περιγραφή λειτουργιών : 

  	    @  Έλεγχος ορισμάτων από τη γραμμή εντολών.

  	    @  Διατήρηση αρχείου για καταγραφή των εντολών του χρήστη.

  	    @  Δημιουργία βασικών δομών.

  	    @  Insert : Εισαγωγή στους πίνακες κατακερματισμού, δημιουργία
  	       σωρού, υπολογισμός κόστους και εισαγωγή σε αυτόν. 

  	    @  Delete : Διαγραφή εγγραφών του αντίστοιχου καλούντος.

  	    @  Find, LookUp : Παρουσιάση πληροφοριών για καλούντά, καλούμενο
  	       αντίστοιχα, με κατάλληλη λειτουργία για διαστήματα χρόνου. Σε 
  	       κάθε περίπτωση ελέγχεται αν υπάρχει κάποιο από τα μη υποχρεωτικά
  	       ορίσματα ή όχι.

  	    @  Indist : Εμφάνιση συνδρομητών με κοινούς καλούμενους αλλά χωρίς 
           κοινή επικοινωνία μεταξύ τους. Με τη βοήθεια μιας κατάλληλης 
           δομής, σώζονται οι αριθμοί με τους οποίους έχει επικοινωνήσει 
           ο caller1, οι αντίστοιχοι του caller2, και εκείνοι που έχουν 
           επικοινωνήσει και με τους δύο. Με αναζήτηση στις λίστες των
           τελευταίων συμπεραίνουμε για το τελικό ζητούμενο.

  	    @  Topdest : Πέρα από τον πρώτο "συχνότερο" κωδικό, εκτυπώνει
  	       και άλλους δύο σε περίπτωση ίδιας συχνότητας κλήσης.

  	    @  Top : Συνδρομητές που δημιουργούν το top k% εισόδημα.

  	    @  Bye : Απελευθέρωση χώρου.

  	    @  Print : Εκτύπωση περιεχομένων πίνακα κατακερματισμού.


- HashFunctions.cpp : Το πρόγραμμα που διαχειρίζεται τις μεθόδους που 
  έχουν να κάνουν με τα Hash Tables. Σύντομη περιγραφή μεθόδων : 

  		@  Συνάρτηση κατακερματισμού.

  		@  Εισαγωγή εγγραφής στον (στους) πίνακα κατακερματισμού.

  		@  Διαγραφή εγγραφής από τον κόμβο λίστας εγγραφών.

  		@  Find, LookUp μέθοδοι.

  		@  Εκτύπωση περιεχομένων πίνακα κατακερματισμού.

  		@  Εισαγωγή πληροφοριών σε λίστα, για την εξαγωγή του 
  		   συχνότερου καλούμενου κωδικού.
      
      @  Αναζήτηση στοιχείου στον πίνακα κατακερματισμού.


- Utilities.cpp : Το πρόγραμμα που διαχειρίζεται όλη την εξέλιξη των
  εξωτερικών λειτουργιών. Σύντομη περιγραφή αυτών : 

  		@  Συνάρτηση διαχείρισης εντολών χρήστη.

  		@  Συνάρτηση διαχείρισης χρονικών διαστηματήτων.

  		@  Συνάρτηση διαχείρισης χρονολογιών.

  		Στις δύο παραπάνω συναρτήσεις, γίνονται έλεγχοι σε 
  		όλα τα στάδιά τους, και εκτυπώνονται κάθε φορά τα 
  		κατάλληλα μηνύματα.

  		@  Συνάρτηση υπολογισμού κόστους από το αντίστοιχο 
  		   αρχείο.

  		@  Έλεγχος για κενό αρχείο.


- BinaryMaxHeapFunctions.cpp : Το πρόγραμμα που διαχειρίζεται τις 
  μεθόδους που έχουν να κάνουν με το σωρό. Σύντομη περιγραφή αυτών :

  		@  Εισαγωγή δεδομένων στο σωρό.

  		@  Καταστροφή σωρού. 

  		@  Έλεγχος ύπαρξης στο σωρό.

  		@  Διάσχιση στο σωρό.

  		@  Κορυφαίοι συνδρομητές σε συγκεκριμένο ποσοστό.


- RegionFunctions.cpp : Το πρόγραμμα που περιλαμβάνει τις μεθόδους
  για τον υπολογισμό του συχνότερου καλούμενου κωδικού, όπως η 
  εισαγωγή, η αναζήτηση, η ύπαρξη και η εκτύπωση.


******************* Διευκρινήσεις - Παρατηρήσεις  *******************


- Έχουν υλοποιηθεί όλες οι ζητούμενες λειτουργίες (εκτός της bonus)
  και της (μισής) indist λειτουργικότητας. 


- Η λειτουργία σχετικά με τις εντολές από τη γραμμή εντολών, έχει να 
  κάνει με την αποθήκευση αυτών σε ένα πρσωρινό αρχείο "temp.txt", 
  και με το διάβασμα αυτού, μετά και την εκτέλεση των εντολών στο 
  αρχείο λειτουργιών (αν αυτό υπάρχει), όπως ζητείται. Το παραπάνω
  πραγματοποιείται και μέσω της αρχικής διεπαφής στην οποία 
  ζητείται από το χρήστη να δώσει μία εντολή ή να συνεχίση με το 
  πιθανό διάβασμα από το αρχείο λειτουργιών.


- Πολλές συγκρίσεις που γίνονται με "NULL" είναι επειδή τα στοιχεία
  αυτά, αρχικοποιούνται έτσι στον constructor της λίστας εγγραφών.


- Τα μεγάλα sample files δυσκολεύουν τη γενικότερη λειτουργικότητα 
  του προγράμματος.


- Τα warnings που εμφανίζονται κατά τη μεταγλώττιση είναι λόγω ορισμένων
  char* που χρησιμοποιούνται αντί για strings.


- Κώδικας για την hash function χρησιμοποιήθηκε από εδώ : 
  http://stackoverflow.com/questions/20462826/hash-function-for-strings-in-c


- Βοήθημα για την εισαγωγή στο σωρό : 
  http://codereview.stackexchange.com/questions/33365/heap-implementation-using-pointer